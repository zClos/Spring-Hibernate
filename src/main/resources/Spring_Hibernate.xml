<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/tx
                           http://www.springframework.org/schema/tx/spring-tx.xsd">

    <context:property-placeholder location="classpath*:/db/db.properties"/>
    <context:component-scan base-package="com.pvt"/>

    <!--Data access-->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${db.driver}"/>
        <property name="url" value="${db.url}"/>
        <property name="username" value="${db.username}"/>
        <property name="password" value="${db.password}"/>
    </bean>

    <!--EntityManagerFactory-->
    <bean name="vendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" p:database="MYSQL"/>
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="jpaVendorAdapter" ref="vendorAdapter">
        </property>
        <property name="packagesToScan" value="com.pvt.pojos"/>
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.hbm2ddl.auto">create</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.bytecode.use_reflection_optimizer">true</prop>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
                <prop key="hibernate.connection.autocommit">false</prop>
            </props>
        </property>
    </bean>

    <!--Transaction manager bean and Spring AOP config-->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager"
          p:dataSource-ref="dataSource"/>
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!--Configure beans to fill data base-->
    <bean id="department" class="com.pvt.pojos.Department"
          p:departmentName="someDep">
        <property name="employees">
            <list value-type="com.pvt.pojos.Employee">
                <ref bean="employee1"/>
            </list>
        </property>
    </bean>

    <bean id="employee1" class="com.pvt.pojos.Employee"
          p:firstName="Vasia" p:lastName="Pupkin" p:employeeDetail-ref="employeeDetail1">
        <property name="meetings">
            <set>
                <ref bean="meeting1"/>
            </set>
        </property>
        <property name="department" ref="department"/>
    </bean>

    <bean id="employeeDetail1" class="com.pvt.pojos.EmployeeDetail"
          p:employee-ref="employee1" p:country="Belarus" p:city="Minsk"/>

    <bean id="meeting1" class="com.pvt.pojos.Meeting" p:subject="Meeting #1">
        <property name="employees">
            <list value-type="com.pvt.pojos.Employee">
                <ref bean="employee1"/>
            </list>
        </property>
    </bean>

    <bean id="departmentService" class="com.pvt.service.DepartmentService" autowire="constructor"/>
    <bean id="employeeService" class="com.pvt.service.EmployeeService" autowire="constructor"/>
    <bean id="employeeDetailService" class="com.pvt.service.EmployeeDetailService" autowire="constructor"/>
    <bean id="meetingService" class="com.pvt.service.MeetingService" autowire="constructor"/>

</beans>